package com.blue.ui.user;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import android.content.Intent;
import android.os.Bundle;
import android.text.TextUtils;
import android.util.Log;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.AdapterView;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import android.widget.ListAdapter;
import android.widget.ListView;
import android.widget.SimpleAdapter;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.Toast;

import com.actionbarsherlock.app.SherlockActivity;
import com.blue.R;
import com.blue.app.BlueApplication;
import com.blue.bean.User;
import com.blue.conninternet.UserRequest;
import com.blue.lib.volley.Request.Method;
import com.blue.lib.volley.RequestQueue;
import com.blue.lib.volley.Response.Listener;
import com.blue.ui.user.about.AboutActivity;
import com.blue.ui.user.center.CollectionNoteActivity;
import com.blue.ui.user.center.GalleryActivity;
import com.blue.ui.user.center.UserDataActivity;
import com.blue.ui.user.center.UserNoteActivity;
import com.blue.util.HttpUtils;
import com.blue.util.LoginUtils;
import com.blue.util.SubmitPara;
import com.nostra13.universalimageloader.core.ImageLoader;

/**
 * @author SLJM
 * @create 2014-3-26
 * @desc 个人中心
 * @para 用户的id 
 */
public class UserCenterActivity extends BaseActivity implements OnClickListener,OnItemClickListener {

	private TextView name_tv;
	private TextView edit_tv;
	private ImageView ic_iv;
	private Button exit_btn;
	private RelativeLayout about_rl;
	private String user_other_id;
	private String user_self_id;
	private ListView listView;
	private User user;
	private ImageLoader imageLoader;
	private RequestQueue requestQueue;
	private static final String TAG = "UserCenterActivity";
	private String listString[] = { "我的资料", "我的相册", "我的帖子", "我的评论" ,"我的收藏","我的通知"};
//	private String listString[] = { "我的资料", "我的帖子", "我的评论" ,"我的通知"};
	private List<Map<String, Object>> listData = new ArrayList<Map<String, Object>>();
	private ListAdapter listAdapter;// ListView 的Adapter
	
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.user_center);
		
		getIntentData();
		initView();
		initListData();
		initList();
		getUserInfo();
	}
	
	private void getIntentData() {
		Intent intent = getIntent();
		user_other_id = intent.getStringExtra("user_id");
	}
	
	/** 初始化 */
	private void initView() {
		
		if (BlueApplication.isLogin(this)) {
			user_self_id = LoginUtils.getLoginUserid(this);
		}
		Log.i(TAG, "other user_id = " + user_other_id);
		Log.i(TAG, "self user_id = " + user_self_id);
		
		imageLoader = ImageLoader.getInstance();
		requestQueue = BlueApplication.requestQueue;
		
		listView = (ListView) findViewById(R.id.user_center_lv);
		edit_tv = (TextView) findViewById(R.id.edit_user_center_tv);
		name_tv = (TextView) findViewById(R.id.name_user_center_tv);
		ic_iv = (ImageView) findViewById(R.id.ic_user_center_iv);
		about_rl = (RelativeLayout) findViewById(R.id.about_rl);
		exit_btn = (Button) findViewById(R.id.exit_btn);
		
		about_rl.setOnClickListener(this);
		exit_btn.setOnClickListener(this);
		listView.setOnItemClickListener(this);
		
		if (!user_self_id.equals(user_other_id)) {
			edit_tv.setVisibility(View.GONE);
			exit_btn.setVisibility(View.GONE);
		}
		
	}
	
	private void initList() {
		listAdapter = new SimpleAdapter(this, listData,R.layout.user_center_list_item, new String[] { 
						"list_array" }, new int[] {R.id.text_user_center_item_tv });
		listView.setAdapter(listAdapter);
	}
	/**
	 * 初始化 下边的ListView 数据
	 */
	private void initListData() {
		for (int i = 0; i < listString.length; i++) {
			Map<String, Object> map = new HashMap<String, Object>();
			//map.put("listInt", listInt[i]);
			//map.put("listImage", listImage[i]);
			map.put("list_array", listString[i]);
			//map.put("img", R.drawable.ico_about_top25);
			listData.add(map);
		}
	}

	private String getMapInfo() {
		return TextUtils.isEmpty(user_other_id) ? user_self_id : user_other_id;
	}
	
	/** 获取用户的个人信息 */
	private void getUserInfo() {
		
		UserRequest userCenterRequest = new UserRequest(Method.POST, HttpUtils.initArticleURL("user_info"),
				SubmitPara.getUserInfo(getMapInfo()), new Listener<User>() {

					@Override
					public void onResponse(User response) {
						
						if (response != null) {
							user = response;
							initData();
							
						}
					}
				}, null);

		requestQueue.add(userCenterRequest);
		requestQueue.start();
	}
	
	private void initData() {
		name_tv.setText(user.user_name);
		imageLoader.displayImage(user.user_ic, ic_iv);
		edit_tv.setOnClickListener(this);
	}


	@Override
	public void onClick(View view) {
		
		Intent intent = new Intent();

		switch (view.getId()) {
		//编辑资料
		case R.id.edit_user_center_tv:
			intent.setClass(this, EditDataActivity.class);
			break;
		//关于深蓝
		case R.id.about_rl:
			intent.setClass(this, AboutActivity.class);
			break;
		//退出登录
		case R.id.exit_btn:
			LoginUtils.saveLoginUserid("", this);
			intent.setClass(this, LoginActivity.class);
			finish();
			break;
		}
		startActivity(intent);
	}

	@Override
	protected void onStop() {
		super.onStop();
		requestQueue.stop();
	}

	@Override
	public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
		
		Intent intent = new Intent();
		switch (position) {
		//我的资料
		case 0:
			intent.setClass(this, UserDataActivity.class);
			intent.putExtra("user_id", user_other_id);
			startActivity(intent);
			break;
		//我的相册
		case 1:
			intent.setClass(this, GalleryActivity.class);
			intent.putExtra("user_id", user_other_id);
			startActivity(intent);
			break;
		//我的帖子
		case 2:
			intent.setClass(this, UserNoteActivity.class);
			startActivity(intent);
			break;
		//我的评论
		case 3:
			Toast.makeText(this, "功能没有实现", Toast.LENGTH_SHORT).show();
			break;
		//我的收藏
		case 4:
			intent.setClass(this, CollectionNoteActivity.class);
			startActivity(intent);
			break;
			
		//我的通知
	    case 5:
	    	Toast.makeText(this, "功能没有实现", Toast.LENGTH_SHORT).show();
	
	        break;
		default:
			break;
		}
		
	}
}
