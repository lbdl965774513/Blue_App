package com.blue.jpush;


import com.blue.ui.news.NewsDetailsActivity;

import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import cn.jpush.android.api.JPushInterface;


/**
 * 自定义接收器
 * 
 * 如果不定义这个 Receiver，则：
 * 1) 默认用户会打开主界面
 * 2) 接收不到自定义消息
 */
public class MyReceiver extends BroadcastReceiver {
	
	private String article_id;
	private String TITLE;
	private static final String TAG = "MyReceiver";

	@Override
	public void onReceive(Context context, Intent intent) {
		
        Bundle bundle = intent.getExtras();
		Log.d(TAG, "[MyReceiver] onReceive - " + intent.getAction() + ", extras: " + printBundle(bundle));
		  TITLE = bundle.getString(JPushInterface.EXTRA_NOTIFICATION_TITLE);
		  String type = bundle.getString(JPushInterface.EXTRA_CONTENT_TYPE);
		  String article_id = bundle.getString(JPushInterface.EXTRA_MESSAGE);
		Log.i(TAG, "标题："+type);
        if (JPushInterface.ACTION_REGISTRATION_ID.equals(intent.getAction())) {
            String regId = bundle.getString(JPushInterface.EXTRA_REGISTRATION_ID);
            Log.d(TAG, "[MyReceiver] 接收Registration Id : " + regId);
            //send the Registration Id to your server...
                        
        } else if (JPushInterface.ACTION_MESSAGE_RECEIVED.equals(intent.getAction())) {
        	Log.d(TAG, "[MyReceiver] 接收到推送下来的自定义消息: " + bundle.getString(JPushInterface.EXTRA_MESSAGE));
        	//processCustomMessage(context, bundle);
        
        } else if (JPushInterface.ACTION_NOTIFICATION_RECEIVED.equals(intent.getAction())) {
            Log.d(TAG, "[MyReceiver] 接收到推送下来的通知");
            int notifactionId = bundle.getInt(JPushInterface.EXTRA_NOTIFICATION_ID);
            Log.d(TAG, "[MyReceiver] 接收到推送下来的通知的ID: " + notifactionId);
            String type2 = bundle.getString(JPushInterface.EXTRA_CONTENT_TYPE);
            Log.i(TAG, "type2 = " + type2);
            article_id = bundle.getString(JPushInterface.EXTRA_CONTENT_TYPE);
            Log.i(TAG, "article_id："+article_id);
            
         //   processCustomMessage(context, bundle);
        } else if (JPushInterface.ACTION_NOTIFICATION_OPENED.equals(intent.getAction())) {
            Log.d(TAG, "[MyReceiver] 用户点击打开了通知");
            
            JPushInterface.reportNotificationOpened(context, bundle.getString(JPushInterface.EXTRA_MSG_ID));
           // System.out.println("EXTRA_MSG_ID:"+JPushInterface.EXTRA_MSG_ID);
            if(TITLE.equals("您有新的评论")){
            	Intent intent1 = new Intent(context,NewsDetailsActivity.class);
            	System.out.println("您有新的评论");
            	//TODO article_id == null 
            	intent1.putExtra("article_id", article_id);
            	intent1.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
            	intent1.putExtra("index", 1);
            	context.startActivity(intent1);
            }
            if(TITLE.equals("您有新的点赞")){
            	Intent intent1 = new Intent(context,NewsDetailsActivity.class);
            	System.out.println("您有新的点赞");
            	intent1.putExtra("article_id", article_id);
            	intent1.putExtra("index", 1);
            	intent1.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
            	context.startActivity(intent1);
            }
        	
        } else if (JPushInterface.ACTION_RICHPUSH_CALLBACK.equals(intent.getAction())) {
            Log.d(TAG, "[MyReceiver] 用户收到到RICH PUSH CALLBACK: " + bundle.getString(JPushInterface.EXTRA_EXTRA));
            //在这里根据 JPushInterface.EXTRA_EXTRA 的内容处理代码，比如打开新的Activity， 打开一个网页等..
        	
        } else {
        	Log.d(TAG, "[MyReceiver] Unhandled intent - " + intent.getAction());
        }
	}

	// 打印所有的 intent extra 数据
	private static String printBundle(Bundle bundle) {
		StringBuilder sb = new StringBuilder();
		for (String key : bundle.keySet()) {
			if (key.equals(JPushInterface.EXTRA_NOTIFICATION_ID)) {
				sb.append("\nkey:" + key + ", value:" + bundle.getInt(key));
			} else {
				sb.append("\nkey:" + key + ", value:" + bundle.getString(key));
			}
		}
		return sb.toString();
	}
	//send msg to MainActivity
//	private void processCustomMessage(Context context, Bundle bundle) {
//		if (MainActivity.isForeground) {
//			String message = bundle.getString(JPushInterface.EXTRA_MESSAGE);
//			String extras = bundle.getString(JPushInterface.EXTRA_EXTRA);
//			 System.out.println("自定义消息值message："+message+"  //extras:"+extras);
//			Intent msgIntent = new Intent(MainActivity.MESSAGE_RECEIVED_ACTION);
//			msgIntent.putExtra(MainActivity.KEY_MESSAGE, message);
//			if (!ExampleUtil.isEmpty(extras)) {
//				try {
//					JSONObject extraJson = new JSONObject(extras);
//					if (null != extraJson && extraJson.length() > 0) {
//						msgIntent.putExtra(MainActivity.KEY_EXTRAS, extras);
//						System.out.println("自定义消息值extras："+extras);
//					}
//				} catch (JSONException e) {
//				}
//			}
//			context.sendBroadcast(msgIntent);
//		}
//	}
}
